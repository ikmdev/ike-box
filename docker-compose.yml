services:
  nexus:
    image: sonatype/nexus3
    container_name: nexus
    volumes:
      - nexus-data:/nexus-data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rapidenv
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    profiles: ["path-based", "subdomain"]

  komet:
    image: ikebox/komet:0.0.1
    container_name: komet
    volumes:
      - ~/Solor:/root/Solor
      - ./komet-data/users.ini:/root/Solor/users.ini:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/status/alive || wget --spider -q http://localhost:8080/status/alive || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rapidenv
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    profiles: ["path-based", "subdomain"]

  nginx:
    build:
      context: .
    container_name: nginx
    environment:
      - DOMAINS=${NGINX_DOMAINS}
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-logs:/var/log/nginx
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - nexus
      - komet
      - certbot
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${NGINX_PORT:-80}/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rapidenv
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    profiles: ["path-based"]

  ikmdev-site:
      image: ikebox/ikmdev-site:1.0.0
      container_name: ikmdev-site
      volumes:
      - ikmdev-data:/data
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost/"]
        interval: 30s
        timeout: 10s
        retries: 3
      networks:
      - rapidenv
      restart: unless-stopped
      logging:
       driver: "json-file"
       options:
        max-size: "10m"
        max-file: "3"
      profiles: ["path-based", "subdomain"]

  nginx-subdomain:
    build:
      context: .
      dockerfile: Dockerfile-subdomain-web
    container_name: nginx-subdomain
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_PORT:-443}:443"
    volumes:
      - ./subdomain/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - nexus
      - komet
      - ikmdev-site
      - certbot
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${WWW_SUBDOMAIN}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rapidenv
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    profiles: ["subdomain"]

  certbot:
    image: certbot/certbot
    container_name: certbot
    environment:
      - BASE_DOMAIN=${BASE_DOMAIN}
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot-nginx-entrypoint.sh:/certbot-nginx-entrypoint.sh:ro
    entrypoint: "/certbot-nginx-entrypoint.sh"
    networks:
      - rapidenv
    restart: unless-stopped
    profiles: ["subdomain"]

  certbot-initialize:
    image: certbot/certbot
    container_name: certbot
    environment:
      - BASE_DOMAIN=${BASE_DOMAIN}
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot-entrypoint-initialize.sh:/certbot-entrypoint-initialize.sh:ro
    entrypoint: "/certbot-entrypoint-initialize.sh"
    networks:
      - rapidenv
    restart: no
    stdin_open: true
    tty: true
    profiles: ["initialize"]

volumes:
  nexus-data:
  komet-data:
  nginx-logs:
  ikmdev-data:
  certbot-data:
  certbot-webroot:

networks:
  rapidenv:
    driver: bridge
